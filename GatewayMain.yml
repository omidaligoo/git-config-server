server:
  host-address-authentication: http://94.232.173.157:8000
  host-address-signin-session: http://94.232.173.157:8024
  host-address-microservice-drive: http://94.232.173.157:8016
  host-address-microservice-notification: http://94.232.173.157:8018
  host-address-microservice-messaging: http://94.232.173.157:8017
  servlet:
    session:
      timeout: 600000
      cookie:
        name: UISESSION
  compression:
    enabled: true
    mime-types: text/html, text/xml, text/plain, text/css, application/javascript, application/json, image/svg+xml
    min-response-size: 1024
spring:
  application:
    name: GatewayClass
  boot:
    admin:
      client:
        url:
        - http://administrator:8080
  servlet:
    multipart:
      max-file-size: 102400KB
      max-request-size: 102400KB
  rabbitmq:
    host: 192.168.4.101
    port: 5672
    username: guest
    password: guest
eureka:
  client:
    service-url:
      defaultZone: http://discovery:8080/eureka
    enabled: true
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    metadata-map:
      zone: primary # This is needed for the load balancer
ribbon:
  ReadTimeout: 100000000
  eureka:
    enabled: true
feign:
  hystrix:
    enabled: false
  client:
    config:
      default:
        connectTimeout: 60000000
        readTimeout: 60000000
hystrix:
  metrics:
    enabled: true
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 50000000
zuul:
  sensitive-headers: Cookie,Set-Cookie
  host:
    connect-timeout-millis: 60000000
    socket-timeout-millis: 60000000
    time-to-live: 60000000
  routes:
    uaa:
      path: /UAA/**
      service-id: UAA
    uaa-class:
      path: /UAAClass/**
      service-id: UAAClass
    captcha:
      path: /Captcha/**
      service-id: Captcha

    microservice-class:
      path: /MicroserviceClass/**
      service-id: MicroserviceClass    
    microservice-course:
      path: /MicroserviceCourse/**
      service-id: MicroserviceCourse  
    microservice-drive:
      path: /MicroserviceDrive/**
      service-id: MicroserviceDrive    
    microservice-basic-information:
      path: /MicroserviceBasicInformation/**
      service-id: MicroserviceBasicInformation    
    microservice-form-builder:
      path: /MicroserviceFormBuilder/**
      service-id: MicroserviceFormBuilder    
    microservice-messaging:
      path: /MicroserviceMessaging/**
      service-id: MicroserviceMessaging   
    microservice-organization-chart:
      path: /MicroserviceOrganizationChart/**
      service-id: MicroserviceOrganizationChart   
    microservice-secretariat:
      path: /MicroserviceSecretariat/**
      service-id: MicroserviceSecretariat  
    microservice-notification:
      path: /MicroserviceNotification/**
      service-id: MicroserviceNotification  
    microservice-community:
      path: /MicroserviceCommunity/**
      service-id: MicroserviceCommunity  
    microservice-training:
      path: /MicroserviceTraining/**
      service-id: MicroserviceTraining 
    microservice-feed-back:
      path: /MicroserviceFeedBack/**
      service-id: MicroserviceFeedBack 
    signin-session:
      path: /SigninSession/**
      service-id: SigninSession  
    microservice-payment:
      path: /MicroservicePayment/**
      service-id: MicroservicePayment 
      
    microservice-multimedia-convertor:
      path: /MicroserviceMultimediaConvertor/**
      service-id: MicroserviceMultimediaConvertor

    microservice-video-conference:
      path: /MicroserviceVideoConference/**
      service-id: MicroserviceVideoConference

    service-sama:
      path: /ServiceSama/**
      service-id: ServiceSama

management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: ALWAYS
logging:
  path: log
  file: 
    max-size: 5MB
    max-history: 100
jwt:
  token:
    header-name: Authorization
    header-name-uaa: AuthorizationUAA
    header-name-sub-uaa: AuthorizationSubUAA
project:
  key: SAMA_CLASS_PROJECT
security:
  oauth2:
    client:
      client-id: GatewayClassId
      client-secret: GatewayClassSecret
##### clientId + ":" + clientSecret
      client-id-and-secret-in-base-64: R2F0ZXdheUNsYXNzSWQ6R2F0ZXdheUNsYXNzU2VjcmV0
      grant-type: password
#      access-token-uri: http://uaa:8080/oauth/token
#      user-authorization-uri: http://uaa:8080/oauth/authorize
    resource:
      user-info-uri: http://uaa:8080/account/principal
